"""update blog table

Revision ID: b71a3b430dbe
Revises: 33b4fe5479bc
Create Date: 2023-09-13 15:29:00.259411

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import Integer, String, Column, DateTime, ForeignKey, func

# revision identifiers, used by Alembic.
revision: str = 'b71a3b430dbe'
down_revision: Union[str, None] = '33b4fe5479bc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('blogs')

    op.create_table(
        'blogs',
        Column('id', Integer, autoincrement=True, primary_key=True),
        Column('title', String(50)),
        Column('description', String(150), unique=True, index=True),
        Column('created_at', DateTime, server_default=func.now()),
        Column('updated_at', DateTime, onupdate=func.now()),
        Column('user_id', Integer, ForeignKey('users.id'))
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blogs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='blogs_pkey')
    )
    op.create_index('ix_blogs_description', 'blogs', ['description'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    # ### end Alembic commands ###
